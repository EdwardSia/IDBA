-- CREATE DATABASE

CREATE DATABASE AMS;
GO

USE AMS;
GO

-- CREATE TABLES

CREATE TABLE Roles (
	Id UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
	[Role] NVARCHAR(255) NOT NULL
)
GO

CREATE TABLE Account (
	Id UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
	Username NVARCHAR(20) NOT NULL,
	[Password] NVARCHAR(15) NOT NULL,
	Firstname NVARCHAR(MAX) NOT NULL,
	Lastname NVARCHAR(MAX) NOT NULL,
	EmailAddress NVARCHAR(MAX) NOT NULL,
	RolesId UNIQUEIDENTIFIER NOT NULL
)
GO

CREATE TABLE Department (
	Id UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
	DepartmentName NVARCHAR(255) NOT NULL
)
GO

CREATE TABLE Program (
	Id UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
	ProgramCode NVARCHAR(255) NOT NULL,
	ProgramName NVARCHAR(MAX) NOT NULL,
	ManagerId UNIQUEIDENTIFIER,
	DepartmentId UNIQUEIDENTIFIER
)
GO

CREATE TABLE Course (
	Id UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
	CourseCode NVARCHAR(255) NOT NULL,
	CourseName NVARCHAR(MAX) NOT NULL,
	ProgramId UNIQUEIDENTIFIER NOT NULL
)
GO

CREATE TABLE Enrollment (
	Id UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
	Marks DECIMAL NOT NULL DEFAULT 0,
	AccountId UNIQUEIDENTIFIER NOT NULL,
	CourseId UNIQUEIDENTIFIER NOT NULL
)
GO

CREATE TABLE Staff (
	Id UNIQUEIDENTIFIER NOT NULL PRIMARY KEY DEFAULT NEWID(),
	AccountId UNIQUEIDENTIFIER NOT NULL,
	CourseId UNIQUEIDENTIFIER NOT NULL
)
GO

-- TABLE RELATIONSHIPS

ALTER TABLE Account ADD CONSTRAINT FK_ROLES_ACCOUNT FOREIGN KEY (RolesId) REFERENCES Roles(Id)
ALTER TABLE Program ADD CONSTRAINT FK_ACCOUNT_PROGRAM FOREIGN KEY (ManagerId) REFERENCES Account(Id)
ALTER TABLE Program ADD CONSTRAINT FK_DEPARTMENT_PROGRAM FOREIGN KEY (DepartmentId) REFERENCES Department(Id)
ALTER TABLE Course ADD CONSTRAINT FK_PROGRAM_COURSE FOREIGN KEY (ProgramId) REFERENCES Program(Id)
ALTER TABLE Enrollment ADD CONSTRAINT FK_ACCOUNT_ENROLLMENT FOREIGN KEY (AccountId) REFERENCES Account(Id)
ALTER TABLE Enrollment ADD CONSTRAINT FK_COURSE_ENROLLMENT FOREIGN KEY (CourseId) REFERENCES Course(Id)
ALTER TABLE Staff ADD CONSTRAINT FK_ACCOUNT_STAFF FOREIGN KEY (AccountId) REFERENCES Account(Id)
ALTER TABLE Staff ADD CONSTRAINT FK_COURSE_STAFF FOREIGN KEY (CourseId) REFERENCES Course(Id)
GO

-- INSERT ROLES

INSERT Roles(Role) VALUES ('Administrator')
INSERT Roles(Role) VALUES ('Program Manager')
INSERT Roles(Role) VALUES ('Staff')
INSERT Roles(Role) VALUES ('Student')
GO

-- VIEWS

CREATE VIEW StudentCourse AS 

SELECT	Account.Firstname,
		Account.Lastname,
		Account.Username,
		Enrollment.Marks,
		Course.CourseCode,
		Course.CourseName
FROM	Account 
		INNER JOIN Enrollment ON Account.Id = Enrollment.AccountId 
		INNER JOIN Course ON Course.Id = Enrollment.CourseId
GO

-- STORE PROCEDURE DEPARTMENT

CREATE PROCEDURE InsertDepartment
	@departmentName NVARCHAR(255)
AS
BEGIN
	INSERT Department(DepartmentName) VALUES (@departmentName)
END
GO

CREATE PROCEDURE DeleteDepartment
	@departmentId UNIQUEIDENTIFIER
AS
BEGIN
	DELETE Department WHERE Id = @departmentId
END
GO

-- STORE PROCEDURE PROGRAM

CREATE PROCEDURE InsertProgram
	@programCode NVARCHAR(255),
	@programName NVARCHAR(MAX),
	@departmentId UNIQUEIDENTIFIER
AS
BEGIN
	INSERT Program(ProgramCode,ProgramName) VALUES (@programCode, @programName)
END
GO

-- STORE PROCEDURE STUDENT

CREATE PROCEDURE InsertAccount
	@username NVARCHAR(20),
	@password NVARCHAR(15),
	@firstName NVARCHAR(MAX),
	@lastName NVARCHAR(MAX),
	@emailAddress NVARCHAR(MAX),
	@roleId UNIQUEIDENTIFIER
AS
BEGIN
	INSERT Account(Username, [Password], Firstname, Lastname, EmailAddress, RolesId)
	VALUES (@username, @password, @firstName, @lastName, @emailAddress, @roleId)
END
GO